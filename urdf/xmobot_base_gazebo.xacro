<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:macro name="gazebo_base_plugins" params="drive_type">

        <!-- Gazebo控制器插件 -->
        <gazebo>
            <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
                <robotNamespace>/</robotNamespace>
                <robotParam>robot_description</robotParam>
                <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            </plugin>
        </gazebo>

        <!-- Base材质覆盖 -->
        <gazebo reference="base_link">
            <material>Gazebo/Gray</material>
            <kp>100000.0</kp>
            <kd>1.0</kd>
            <mu1>1.0</mu1>
            <mu2>1.0</mu2>
            <fdir1>1 0 0</fdir1>
            <maxVel>10.0</maxVel>
            <minDepth>0.0005</minDepth>
        </gazebo>

        <gazebo reference="lidar_link">
            <material>Gazebo/SkyBlue</material>
        </gazebo>

        <gazebo reference="camera_link">
            <material>Gazebo/Green</material>
        </gazebo>

        <!-- 四个轮子的材质 -->
        <xacro:wheel_surface wheel_link_name="front_left_wheel_link"/>
        <xacro:wheel_surface wheel_link_name="front_right_wheel_link"/>
        <xacro:wheel_surface wheel_link_name="rear_left_wheel_link"/>
        <xacro:wheel_surface wheel_link_name="rear_right_wheel_link"/>

        <!-- 四个轮子的wheel transmission -->
        <xacro:wheel_transmission prefix="front_left"/>
        <xacro:wheel_transmission prefix="front_right"/>
        <xacro:wheel_transmission prefix="rear_left"/>
        <xacro:wheel_transmission prefix="rear_right"/>

        <!-- 根据drive_type决定是否添加材质和steering transmission -->
        <xacro:if value="${drive_type == 'ackermann_front'}">
            <xacro:steering_surface steering_link_name="front_left_steering_link"/>
            <xacro:steering_surface steering_link_name="front_right_steering_link"/>

            <xacro:steering_transmission prefix="front_left"/>
            <xacro:steering_transmission prefix="front_right"/>
        </xacro:if>

        <xacro:if value="${drive_type == 'ackermann_rear'}">
            <xacro:steering_surface steering_link_name="rear_left_steering_link"/>
            <xacro:steering_surface steering_link_name="rear_right_steering_link"/>

            <xacro:steering_transmission prefix="rear_left"/>
            <xacro:steering_transmission prefix="rear_right"/>
        </xacro:if>

        <xacro:if value="${drive_type == '4wis'}">
            <xacro:steering_surface steering_link_name="front_left_steering_link"/>
            <xacro:steering_surface steering_link_name="front_right_steering_link"/>
            <xacro:steering_surface steering_link_name="rear_left_steering_link"/>
            <xacro:steering_surface steering_link_name="rear_right_steering_link"/>

            <xacro:steering_transmission prefix="front_left"/>
            <xacro:steering_transmission prefix="front_right"/>
            <xacro:steering_transmission prefix="rear_left"/>
            <xacro:steering_transmission prefix="rear_right"/>
        </xacro:if>

        <!-- Lidar仿真 -->
        <gazebo reference="lidar_link">
            <sensor name="hls_lfcd_lds" type="ray">
                <always_on>true</always_on>
                <visualize>true</visualize>
                <pose>0 0 0 0 0 0</pose>
                <update_rate>5</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <resolution>1.000000</resolution>
                            <min_angle>${-M_PI}</min_angle>
                            <max_angle>${M_PI}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.120000</min>
                        <max>8</max>
                        <resolution>0.015000</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
                    <ros>
                        <!-- <namespace>/tb3</namespace> -->
                        <remapping>~/out:=scan</remapping>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>lidar_link</frame_name>
                </plugin>
            </sensor>
        </gazebo>

        <!-- Camera仿真 -->
        <gazebo reference="camera_link">
            <sensor type="camera" name="camera_sensor">
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>30</update_rate>
                <camera>
                    <horizontal_fov>1.39626</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>100</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </camera>
                <plugin name="gazebo_ros_camera_controller" filename="libgazebo_ros_camera.so">
                    <ros>
                        <!-- <namespace>test_cam</namespace> -->
                        <remapping>image_raw:=image_raw</remapping>
                        <remapping>camera_info:=camera_info</remapping>
                    </ros>
                    <camera_name>camera</camera_name>
                    <frame_name>camera_link</frame_name>
                    <hack_baseline>0.07</hack_baseline>
                </plugin>
            </sensor>
        </gazebo>

        <!-- imu仿真 -->
        <gazebo reference="imu_link">
            <gravity>true</gravity>
            <sensor name="imu_sensor" type="imu">
                <always_on>true</always_on>
                <update_rate>200</update_rate>
                <imu>
                    <angular_velocity>
                        <x>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>2e-4</stddev>
                            </noise>
                        </z>
                    </angular_velocity>
                    <linear_acceleration>
                        <x>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian">
                                <mean>0.0</mean>
                                <stddev>1.7e-2</stddev>
                            </noise>
                        </z>
                    </linear_acceleration>
                </imu>
                <plugin name="gazebo_ros_imu" filename="libgazebo_ros_imu_sensor.so">
                    <ros>
                        <!-- <namespace>/xmobot</namespace> -->
                        <remapping>~/out:=imu</remapping>
                    </ros>
                    <initial_orientation_as_reference>false</initial_orientation_as_reference>>
                </plugin>
            </sensor>
        </gazebo>

    </xacro:macro>

    <!-- 单个wheel transmission -->
    <xacro:macro name="wheel_transmission" params="prefix">
        <transmission name="${prefix}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1.0</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- 单个steering transmission -->
    <xacro:macro name="steering_transmission" params="prefix">
        <transmission name="${prefix}_steering_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_steering_joint">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_steering_motor">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                <mechanicalReduction>1.0</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- wheel表面属性 -->
    <xacro:macro name="wheel_surface" params="wheel_link_name">
        <gazebo reference="${wheel_link_name}">
            <material>Gazebo/DarkGrey</material>
            <kp>1e6</kp>
            <kd>1.0</kd>
            <mu1>1.2</mu1>
            <mu2>0.8</mu2>
            <minDepth>0.01</minDepth>
        </gazebo>
    </xacro:macro>

    <!-- steering表面材质 -->
    <xacro:macro name="steering_surface" params="steering_link_name">
        <gazebo reference="${steering_link_name}">
            <material>Gazebo/Orange</material>
        </gazebo>
    </xacro:macro>

</robot>
